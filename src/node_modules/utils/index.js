const call = fn => (...args) => {
  debugger
  return new Promise((resolve, reject) => {
    fn(...args, (err, result) => {
      debugger
      if (err) reject(err)
      else resolve(result)
    })
  })
}

const fromEntries = entries =>
  entries.reduce((acc, [key, value]) => {
    acc[key] = value
    return acc
  }, {})

export const all = async o => {
  const promises = Object.entries(o).map(async ([key, fn]) => [
    key,
    await call(fn),
  ])
  const entries = await Promise.all(promises)
  return fromEntries(entries)
}
